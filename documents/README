目录结构:

db: 用来存放数据脚本

static: 用来存放js, css等文件.

application/config/autoload.php : 该文件里可以设置自动加载. 比如自动加载某些model, helper, session等.

比如:
自动加载order_model  , userinfo_model
$autoload['model'] = array("order_model", "userinfo_model");

根据不同的环境在config目录下设置属于不同环境的目录. 只要在index.php 里根据不同的环境,设置不同的参数即可.

开发环境该值为 development;
生产环境该值为: production
define('ENVIRONMENT', 'development');


if (defined('ENVIRONMENT'))
{
	switch (ENVIRONMENT)
	{
		case 'development':
            error_reporting(E_ALL & ~E_NOTICE & ~E_DEPRECATED);
		break;
		case 'testing':
		case 'production':
			error_reporting(0);
		break;

		default:
			exit('The application environment is not set correctly.');
	}
}


Library里可以新建一些公共的类,调用可以使用如下方式都是静态方法.
$this->load->library('Http_do');
Http_do::doGet($reportUrl);

helper也通过autoload来自动加载.
$autoload['helper'] = array("common");


----------------------------------------------------------------------------------------------------
apache config:

etc/httpd.conf:

1,LoadModule rewrite_module modules/mod_rewrite.so


2, <Directory />
       #AllowOverride none
       #Require all denied
       AllowOverride all
       Options FOllowSymLinks
       allow from all
   </Directory>

3, DocumentRoot "/home/richard/source/php/Parllay.Advertiser"
   <Directory "/home/richard/source/php/Parllay.Advertiser">
            Options Indexes FollowSymLinks ExecCGI Includes
        AllowOverride All
       Order allow,deny
       Allow from all
   </Directory>


4,
   Include etc/extra/httpd-mpm.conf

   # Multi-language error messages
   Include etc/extra/httpd-multilang-errordoc.conf

   # Fancy directory listings
   Include etc/extra/httpd-autoindex.conf

   # Language settings
   #Include etc/extra/httpd-languages.conf

   # User home directories
   #Include etc/extra/httpd-userdir.conf

   # Real-time info on requests and configuration
   #Include etc/extra/httpd-info.conf

   # Virtual hosts
   Include etc/extra/httpd-vhosts.conf

   # Local access to the Apache HTTP Server Manual
   #Include etc/extra/httpd-manual.conf

   # Distributed authoring and versioning (WebDAV)
   #Include etc/extra/httpd-dav.conf

   # Various default settings
   Include etc/extra/httpd-default.conf


5, config the VIrtualHost at the follow file

   etc/extra/httpd-default.conf:

<VirtualHost *:80>
    DocumentRoot "/home/richard/source/php/RTM"
    ServerName rtm.parllay.us
    Header set P3P 'CP="CURa ADMa DEVa PSAo PSDo OUR BUS UNI PUR INT DEM STA PRE COM NAV OTC NOI DSP COR"'
    Header set Access-Control-Allow-Origin "*"
</VirtualHost>


5, how to get the url param

    for example the follow url:

    http://rtm.parllay.us/test/index/5/php

    //第一种方式
    public function get($id, $name){
       echo $id;//output 5
       echo $name; //output php

    }

    //第二种方式
    public function get() {
        echo "</br>";
        echo $this->uri->segment(1);//test
        echo "</br>";
        echo $this->uri->segment(2);//index
        echo "</br>";
        echo $this->uri->segment(3);//output 5
        echo "</br>";
        echo $this->uri->segment(4);//output php
        echo "</br>";
    }


6,  微信生产临时二维码接口和下发消息接口使用方式:
    platId 在配置rtm_config文件里定义了;
    $platId = $this->config->item("platId");


    $sceneid = 20150501;
    $result = Wechat::createTempQrcode($platId, $sceneid);
    //var_dump($result);
    $openId = "fdafaaaaaa";
    $msg = "你好啊";
    $result = Wechat::sendCustomerMessageByOpenId($platId, $openId, $msg);

7,  修改mysql配置:  set GLOBAL innodb_lock_wait_timeout = 500

8, 想使用Redis的朋友可以自己新增一个缓存驱动，方法如下：

   1、将system\libraries\Cache\Cache.php复制为application\libraries\Cache\Cache.php

   增加Redis配置:
   protected $valid_drivers = array(
    'cache_apc', 'cache_file', 'cache_memcached', 'cache_dummy', 'cache_redis'
    );
   2、下载将Cache_redis.php并且拷贝到application\libraries\Cache\drivers目录下。

   文件下载地址：https://github.com/EllisLab/CodeIgniter/blob/develop/system/libraries/Cache/drivers/Cache_redis.php

   3、驱动测试：
   $this->load->driver('cache', array('adapter' => 'redis'));

   if ( ! $soho = $this->cache->get('soho'))
   {
    echo 'Saving to the cache!<br />';
    $soho= 'www.sohocn.net';
    // Save into the cache for 5 minutes
    $this->cache->save('soho', $soho, 300);
   }

   echo $soho;

导出数据库脚本：

export sql : mysqldump -uroot  -hmaster -P3306 --routines --default-character-set=utf8 --no-data --databases RTM > RTM.sql -p






